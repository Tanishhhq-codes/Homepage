{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanishq\\\\Desktop\\\\Cursor Test 2.0\\\\src\\\\components\\\\AskAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport waviMascot from '../assets/images/wavi-mascot.png';\nimport '../styles/AskAI.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AskAI() {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: \"Hi! I'm Wavi, your disaster awareness assistant. How can I help you today?\"\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Initialize Gemini AI\n  const genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n  const model = genAI.getGenerativeModel({\n    model: \"gemini-pro\"\n  });\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      // Start a chat\n      const chat = model.startChat({\n        history: [{\n          role: \"user\",\n          parts: \"You are Wavi, a friendly and knowledgeable disaster awareness assistant. Keep responses concise and focused on practical advice.\"\n        }, {\n          role: \"model\",\n          parts: \"I understand. I'll be Wavi, providing helpful and practical disaster awareness information.\"\n        }],\n        generationConfig: {\n          maxOutputTokens: 150,\n          temperature: 0.7\n        }\n      });\n      const result = await chat.sendMessage(input);\n      const response = await result.response;\n      const botMessage = {\n        type: 'bot',\n        text: response.text()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: \"I'm sorry, I'm having trouble connecting right now. Please try again later.\"\n      }]);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"ask-ai\",\n    className: \"ai-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mascot-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mascot-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: waviMascot,\n          alt: \"Wavi the Wave\",\n          className: \"mascot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Ask me anything about disasters...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          disabled: isLoading,\n          className: isLoading ? 'loading' : '',\n          children: isLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AskAI, \"peaDtG3Ar8UR35q3Z5SHoQbrgDA=\");\n_c = AskAI;\nexport default AskAI;\nvar _c;\n$RefreshReg$(_c, \"AskAI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","GoogleGenerativeAI","waviMascot","jsxDEV","_jsxDEV","AskAI","_s","messages","setMessages","type","text","input","setInput","isLoading","setIsLoading","messagesEndRef","genAI","process","env","REACT_APP_GEMINI_API_KEY","model","getGenerativeModel","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","chat","startChat","history","role","parts","generationConfig","maxOutputTokens","temperature","result","sendMessage","response","botMessage","error","console","id","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tanishq/Desktop/Cursor Test 2.0/src/components/AskAI.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\nimport waviMascot from '../assets/images/wavi-mascot.png';\r\nimport '../styles/AskAI.css';\r\n\r\nfunction AskAI() {\r\n  const [messages, setMessages] = useState([\r\n    { type: 'bot', text: \"Hi! I'm Wavi, your disaster awareness assistant. How can I help you today?\" }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Initialize Gemini AI\r\n  const genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\r\n  const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim() || isLoading) return;\r\n\r\n    // Add user message\r\n    const userMessage = { type: 'user', text: input };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Start a chat\r\n      const chat = model.startChat({\r\n        history: [\r\n          {\r\n            role: \"user\",\r\n            parts: \"You are Wavi, a friendly and knowledgeable disaster awareness assistant. Keep responses concise and focused on practical advice.\",\r\n          },\r\n          {\r\n            role: \"model\",\r\n            parts: \"I understand. I'll be Wavi, providing helpful and practical disaster awareness information.\",\r\n          },\r\n        ],\r\n        generationConfig: {\r\n          maxOutputTokens: 150,\r\n          temperature: 0.7,\r\n        },\r\n      });\r\n\r\n      const result = await chat.sendMessage(input);\r\n      const response = await result.response;\r\n      \r\n      const botMessage = {\r\n        type: 'bot',\r\n        text: response.text()\r\n      };\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, {\r\n        type: 'bot',\r\n        text: \"I'm sorry, I'm having trouble connecting right now. Please try again later.\"\r\n      }]);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <section id=\"ask-ai\" className=\"ai-section\">\r\n      <div className=\"mascot-container\">\r\n        <div className=\"mascot-wrapper\">\r\n          <img \r\n            src={waviMascot} \r\n            alt=\"Wavi the Wave\" \r\n            className=\"mascot\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message ${msg.type}`}>\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"message bot loading\">\r\n              <span className=\"dot\"></span>\r\n              <span className=\"dot\"></span>\r\n              <span className=\"dot\"></span>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        \r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n            placeholder=\"Ask me anything about disasters...\"\r\n            disabled={isLoading}\r\n          />\r\n          <button \r\n            onClick={handleSend}\r\n            disabled={isLoading}\r\n            className={isLoading ? 'loading' : ''}\r\n          >\r\n            {isLoading ? 'Sending...' : 'Send'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AskAI; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}